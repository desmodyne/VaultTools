#!/usr/bin/env bash

# build
#
# build all artifacts of this project
#
# author  : stefan schablowski
# contact : stefan.schablowski@desmodyne.com
# created : 2017-05-26


echo
echo 'build project artifacts'
echo


# -----------------------------------------------------------------------------
# configure script parameters

# path from this script to project root
path_to_proj_root='../..'

# absolute path to this script: http://stackoverflow.com/a/9107028
here="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

# path to BashLib library file, relative to project root
path_to_bashlib='ext/BashLib/code/lib/bashlib.sh'

# path to Docker scripts, relative to project root
# TODO: this assumes Infrastructure repo is available at that location
path_to_docker_bin='../../Infrastructure/Services/Infrastructure/Docker/code/bin'

# NOTE: realpath fails if path does not exist

# absolute, canonical path to project root
path_to_proj_root="$( realpath "${here}/${path_to_proj_root}")"

# absolute, canonical path to BashLib library file
path_to_bashlib="$(   realpath "${path_to_proj_root}/${path_to_bashlib}")"

# absolute, canonical path to Docker scripts
path_to_docker_bin="$(realpath "${path_to_proj_root}/${path_to_docker_bin}")"

# TODO: shellcheck reports these to be unused
# https://github.com/koalaman/shellcheck/wiki/SC2034

# array with alphabetical list of tools called by this script
# shellcheck disable=SC2034
req_tools=('build-cont-images')

# array with paths to append to PATH
# shellcheck disable=SC2034
ext_paths=("${path_to_docker_bin}")


# -----------------------------------------------------------------------------
# load BashLib

# NOTE: this only tests if library can be sourced;
# functions are only defined in "$(...)" subshell,
# so a second source for use in here is required
# https://github.com/koalaman/shellcheck/wiki/SC1090
# shellcheck disable=SC1090
if ! output="$(source "${path_to_bashlib}" 2>&1)"
then
    echo "${output}"
    exit 1
fi

# shellcheck disable=SC1090
source "${path_to_bashlib}"


# -----------------------------------------------------------------------------
# run BashLib boilerplate functions

# NOTE: ideally, these function calls would be something like e.g.
#   if ! output="$(configure_platform 2>&1)"
#     ...
# but on the one hand, they have their own output which should be displayed as
# it occurs and more importantly, any changes to global variables would only be
# effective in the subshell created by the braces around the function name and
# would be lost to this script, effectively rendering the function call useless

if ! configure_platform              ; then exit 1; fi
if ! extend_path req_tools ext_paths ; then exit 1; fi
if ! proc_cmd_line_args "${@}"       ; then exit 1; fi


# -----------------------------------------------------------------------------
# call the other scripts in the designated order

# conf_file is defined by proc_cmd_line_args
# https://github.com/koalaman/shellcheck/wiki/SC2154
# shellcheck disable=SC2154
if ! build-cont-images "${conf_file}"; then exit 1; fi


echo 'project artifacts build complete'
echo
