#!/usr/bin/env bash

# build
#
# build all artifacts of this project
#
# author  : stefan schablowski
# contact : stefan.schablowski@desmodyne.com
# created : 2017-05-26


# this script builds a number of Docker container images

# NOTE: on OS X, install required packages using e.g.
#   brew install bash coreutils
# http://brew.sh/
# http://apple.stackexchange.com/a/69332


echo
echo 'build Docker container images'
echo


# -----------------------------------------------------------------------------
# configure script parameters

# path from this script to project root
path_to_proj_root='../..'

# absolute path to this script: http://stackoverflow.com/a/9107028
here="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

# absolute, canonical path to project root
# NOTE: realpath fails if path does not exist
path_to_proj_root="$(realpath "${here}/${path_to_proj_root}")"

# path to BashLib library file, relative to project root
path_to_bashlib='ext/BashLib/code/lib/bashlib.sh'

# absolute path to library
path_to_library="${path_to_proj_root}/${path_to_bashlib}"

# TODO: shellcheck reports these to be unused
# https://github.com/koalaman/shellcheck/wiki/SC2034

# array with alphabetical list of tools called by this script
# shellcheck disable=SC2034
req_tools=('build-basic-images')

# array with paths to append to PATH
# shellcheck disable=SC2034
ext_paths=("${here}")


# -----------------------------------------------------------------------------
# load BashLib

# NOTE: this only tests if library can be sourced;
# functions are only defined in "$(...)" subshell,
# so a second source for use in here is required
# https://github.com/koalaman/shellcheck/wiki/SC1090
# shellcheck disable=SC1090
if ! output="$(source "${path_to_library}" 2>&1)"
then
    echo "${output}"
    exit 1
fi

# shellcheck disable=SC1090
source "${path_to_library}"


# -----------------------------------------------------------------------------
# run BashLib boilerplate functions

# TODO: ideally, these would be e.g.
#   if ! output="$(configure_platform 2>&1)"
#     ...
# but then, changes to global variables are lost in subshell

if ! configure_platform              ; then exit 1; fi
if ! extend_path req_tools ext_paths ; then exit 1; fi
if ! proc_cmd_line_args "${@}"       ; then exit 1; fi


# -----------------------------------------------------------------------------
# call the other scripts in the designated order

# TODO: review error handling (use trap with error function ?)

if ! pushd "${path_to_proj_root}" > /dev/null
then
    echo "failed to pushd to project root ${path_to_proj_root}"
    exit
fi

# conf_file is defined by proc_cmd_line_args
# https://github.com/koalaman/shellcheck/wiki/SC2154
# shellcheck disable=SC2154
if ! build-basic-images "${conf_file}"; then exit 1; fi

if ! popd > /dev/null
then
    echo "failed to popd from project root ${path_to_proj_root}"
    exit
fi


echo 'Docker container images build complete'
echo
